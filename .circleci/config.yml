version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.5.3-node
        environment:
          BUNDLE_PATH: vendor/bundle
          PGUSER: circleci
      - image: circleci/postgres:alpine
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: acoes_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout

      # Node dependencies
      # ==============================
      - restore_cache:
          keys:
            - npm-cache-v1-{{ checksum "yarn.lock" }}
            - npm-cache-v1
      - run: yarn check || yarn install --cache-folder ~/.cache/yarn
      - save_cache:
          key: npm-cache-v1-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      # ==============================

      # ESlint
      # ==============================
      - run:
          name: ESlint
          command: yarn run eslint .
      # ==============================

      # Ruby dependencies
      # ==============================
      - restore_cache:
          keys:
            - gem-cache-v1-{{ checksum "Gemfile.lock" }}
            - gem-cache-v1
      - run: bundle check || bundle install
      - run: bundle clean
      - save_cache:
          key: gem-cache-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      # ==============================

      # Bundler Audit
      # ==============================
      - run:
          name: Bundler Audit
          command: bundle exec bundle audit --update

      # RuboCop
      # ==============================
      - run:
          name: RuboCop
          command: bundle exec rubocop
      # ==============================

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: bundle exec rails db:create db:schema:load --trace

      - run:
          name: FactoryBot lint
          command: bundle exec rails factory_bot:lint

      - run:
          name: Download Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      # Run specs
      # ==============================
      - run:
          name: RSpec
          command: |
            ./cc-test-reporter before-build
            bundle exec rspec --format progress --format RspecJunitFormatter --out ~/rspec/rspec.xml
            ./cc-test-reporter after-build --coverage-input-type simplecov
      - store_test_results:
          path: ~/rspec

workflows:
  version: 2
  workflow:
    jobs:
      - build
